{
  "type": "File",
  "start": 0,
  "end": 3416,
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 95,
      "column": 0
    }
  },
  "program": {
    "type": "Program",
    "start": 0,
    "end": 3416,
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 95,
        "column": 0
      }
    },
    "sourceType": "module",
    "body": [],
    "directives": [],
    "leadingComments": null,
    "innerComments": [
      {
        "type": "CommentBlock",
        "value": "*\n * @external {AppConfiguration}\n * https://homer0.github.io/wootils/class/wootils/node/appConfiguration.js~AppConfiguration.html\n ",
        "start": 0,
        "end": 136,
        "loc": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @external {APIClientBase}\n * https://homer0.github.io/wootils/class/wootils/shared/apiClient.js~APIClient.html\n ",
        "start": 138,
        "end": 259,
        "loc": {
          "start": {
            "line": 6,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @external {APIClientEndpoints}\n * https://homer0.github.io/wootils/typedef/index.html#static-typedef-APIClientEndpoints\n ",
        "start": 261,
        "end": 391,
        "loc": {
          "start": {
            "line": 11,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @external {PathUtils}\n * https://homer0.github.io/wootils/class/wootils/node/pathUtils.js~PathUtils.html\n ",
        "start": 393,
        "end": 508,
        "loc": {
          "start": {
            "line": 16,
            "column": 0
          },
          "end": {
            "line": 19,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @external {Logger}\n * https://homer0.github.io/wootils/class/wootils/node/logger.js~Logger.html\n ",
        "start": 510,
        "end": 616,
        "loc": {
          "start": {
            "line": 21,
            "column": 0
          },
          "end": {
            "line": 24,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @external {EnvironmentUtils}\n * https://homer0.github.io/wootils/class/wootils/node/environmentUtils.js~EnvironmentUtils.html\n ",
        "start": 618,
        "end": 754,
        "loc": {
          "start": {
            "line": 26,
            "column": 0
          },
          "end": {
            "line": 29,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @external {ErrorHandler}\n * https://homer0.github.io/wootils/class/wootils/node/errorHandler.js~ErrorHandler.html\n ",
        "start": 756,
        "end": 880,
        "loc": {
          "start": {
            "line": 31,
            "column": 0
          },
          "end": {
            "line": 34,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @external {RootRequire}\n * https://homer0.github.io/wootils/function/index.html#static-function-rootRequire\n ",
        "start": 882,
        "end": 1000,
        "loc": {
          "start": {
            "line": 36,
            "column": 0
          },
          "end": {
            "line": 39,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @external {Express} https://expressjs.com/en/4x/api.html\n ",
        "start": 1002,
        "end": 1069,
        "loc": {
          "start": {
            "line": 41,
            "column": 0
          },
          "end": {
            "line": 43,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @external {ExpressMiddleware} http://expressjs.com/en/guide/using-middleware.html\n ",
        "start": 1071,
        "end": 1163,
        "loc": {
          "start": {
            "line": 45,
            "column": 0
          },
          "end": {
            "line": 47,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @external {ExpressRequest} https://expressjs.com/en/4x/api.html#req\n ",
        "start": 1165,
        "end": 1243,
        "loc": {
          "start": {
            "line": 49,
            "column": 0
          },
          "end": {
            "line": 51,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @external {ExpressResponse} https://expressjs.com/en/4x/api.html#res\n ",
        "start": 1245,
        "end": 1324,
        "loc": {
          "start": {
            "line": 53,
            "column": 0
          },
          "end": {
            "line": 55,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @external {ExpressResponse} https://expressjs.com/en/4x/api.html#res\n ",
        "start": 1326,
        "end": 1405,
        "loc": {
          "start": {
            "line": 57,
            "column": 0
          },
          "end": {
            "line": 59,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @typedef {function(err:?Error)} ExpressNext A function to call the next middleware. If an\n *                                            argument is specified, it will be handled as an error\n *                                            and sent to the `errorHandler` service.\n ",
        "start": 1407,
        "end": 1693,
        "loc": {
          "start": {
            "line": 61,
            "column": 0
          },
          "end": {
            "line": 65,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @typedef {Object} Provider An object that when registered on Jimpex will take care of setting up\n *                            services and/or configuring the app.\n *                            The method Jimpex uses to register a provider is `register(provider)`\n *                            and is inherit from Jimple.\n * @property {function(app:Jimpex)} register The method that gets called by Jimpex when registering\n *                                           the provider.\n ",
        "start": 1695,
        "end": 2186,
        "loc": {
          "start": {
            "line": 67,
            "column": 0
          },
          "end": {
            "line": 74,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @typedef {Object} Controller An object that when mounted on Jimpex will return a list of routes\n *                              to handle an specific point.\n *                              The method Jimpex uses to mount a controller is\n *                              `mount(point, controller)`.\n * @property {function(app:Jimpex,point:String):Array} connect The method that gets called by\n *                                                             Jimpex when the controller is\n *                                                             mounted. It should return a list\n *                                                             of routes.\n ",
        "start": 2188,
        "end": 2852,
        "loc": {
          "start": {
            "line": 76,
            "column": 0
          },
          "end": {
            "line": 85,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @typedef {Object} Middleware An object that when mounted on Jimpex will return an Express\n *                              middleware for the app to use.\n *                              The method Jimpex uses to mount a controller is `use(middleware)`.\n * @property {function(app:Jimpex):?ExpressMiddleware} connect The method that gets called by Jimpex\n *                                                             when the middleware is mounted. It\n *                                                             should return an Express middleware.\n ",
        "start": 2854,
        "end": 3415,
        "loc": {
          "start": {
            "line": 87,
            "column": 0
          },
          "end": {
            "line": 94,
            "column": 3
          }
        }
      }
    ]
  },
  "comments": [
    {
      "type": "CommentBlock",
      "value": "*\n * @external {AppConfiguration}\n * https://homer0.github.io/wootils/class/wootils/node/appConfiguration.js~AppConfiguration.html\n ",
      "start": 0,
      "end": 136,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 4,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {APIClientBase}\n * https://homer0.github.io/wootils/class/wootils/shared/apiClient.js~APIClient.html\n ",
      "start": 138,
      "end": 259,
      "loc": {
        "start": {
          "line": 6,
          "column": 0
        },
        "end": {
          "line": 9,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {APIClientEndpoints}\n * https://homer0.github.io/wootils/typedef/index.html#static-typedef-APIClientEndpoints\n ",
      "start": 261,
      "end": 391,
      "loc": {
        "start": {
          "line": 11,
          "column": 0
        },
        "end": {
          "line": 14,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {PathUtils}\n * https://homer0.github.io/wootils/class/wootils/node/pathUtils.js~PathUtils.html\n ",
      "start": 393,
      "end": 508,
      "loc": {
        "start": {
          "line": 16,
          "column": 0
        },
        "end": {
          "line": 19,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {Logger}\n * https://homer0.github.io/wootils/class/wootils/node/logger.js~Logger.html\n ",
      "start": 510,
      "end": 616,
      "loc": {
        "start": {
          "line": 21,
          "column": 0
        },
        "end": {
          "line": 24,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {EnvironmentUtils}\n * https://homer0.github.io/wootils/class/wootils/node/environmentUtils.js~EnvironmentUtils.html\n ",
      "start": 618,
      "end": 754,
      "loc": {
        "start": {
          "line": 26,
          "column": 0
        },
        "end": {
          "line": 29,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {ErrorHandler}\n * https://homer0.github.io/wootils/class/wootils/node/errorHandler.js~ErrorHandler.html\n ",
      "start": 756,
      "end": 880,
      "loc": {
        "start": {
          "line": 31,
          "column": 0
        },
        "end": {
          "line": 34,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {RootRequire}\n * https://homer0.github.io/wootils/function/index.html#static-function-rootRequire\n ",
      "start": 882,
      "end": 1000,
      "loc": {
        "start": {
          "line": 36,
          "column": 0
        },
        "end": {
          "line": 39,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {Express} https://expressjs.com/en/4x/api.html\n ",
      "start": 1002,
      "end": 1069,
      "loc": {
        "start": {
          "line": 41,
          "column": 0
        },
        "end": {
          "line": 43,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {ExpressMiddleware} http://expressjs.com/en/guide/using-middleware.html\n ",
      "start": 1071,
      "end": 1163,
      "loc": {
        "start": {
          "line": 45,
          "column": 0
        },
        "end": {
          "line": 47,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {ExpressRequest} https://expressjs.com/en/4x/api.html#req\n ",
      "start": 1165,
      "end": 1243,
      "loc": {
        "start": {
          "line": 49,
          "column": 0
        },
        "end": {
          "line": 51,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {ExpressResponse} https://expressjs.com/en/4x/api.html#res\n ",
      "start": 1245,
      "end": 1324,
      "loc": {
        "start": {
          "line": 53,
          "column": 0
        },
        "end": {
          "line": 55,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {ExpressResponse} https://expressjs.com/en/4x/api.html#res\n ",
      "start": 1326,
      "end": 1405,
      "loc": {
        "start": {
          "line": 57,
          "column": 0
        },
        "end": {
          "line": 59,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {function(err:?Error)} ExpressNext A function to call the next middleware. If an\n *                                            argument is specified, it will be handled as an error\n *                                            and sent to the `errorHandler` service.\n ",
      "start": 1407,
      "end": 1693,
      "loc": {
        "start": {
          "line": 61,
          "column": 0
        },
        "end": {
          "line": 65,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} Provider An object that when registered on Jimpex will take care of setting up\n *                            services and/or configuring the app.\n *                            The method Jimpex uses to register a provider is `register(provider)`\n *                            and is inherit from Jimple.\n * @property {function(app:Jimpex)} register The method that gets called by Jimpex when registering\n *                                           the provider.\n ",
      "start": 1695,
      "end": 2186,
      "loc": {
        "start": {
          "line": 67,
          "column": 0
        },
        "end": {
          "line": 74,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} Controller An object that when mounted on Jimpex will return a list of routes\n *                              to handle an specific point.\n *                              The method Jimpex uses to mount a controller is\n *                              `mount(point, controller)`.\n * @property {function(app:Jimpex,point:String):Array} connect The method that gets called by\n *                                                             Jimpex when the controller is\n *                                                             mounted. It should return a list\n *                                                             of routes.\n ",
      "start": 2188,
      "end": 2852,
      "loc": {
        "start": {
          "line": 76,
          "column": 0
        },
        "end": {
          "line": 85,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} Middleware An object that when mounted on Jimpex will return an Express\n *                              middleware for the app to use.\n *                              The method Jimpex uses to mount a controller is `use(middleware)`.\n * @property {function(app:Jimpex):?ExpressMiddleware} connect The method that gets called by Jimpex\n *                                                             when the middleware is mounted. It\n *                                                             should return an Express middleware.\n ",
      "start": 2854,
      "end": 3415,
      "loc": {
        "start": {
          "line": 87,
          "column": 0
        },
        "end": {
          "line": 94,
          "column": 3
        }
      }
    }
  ],
  "tokens": [
    {
      "type": "CommentBlock",
      "value": "*\n * @external {AppConfiguration}\n * https://homer0.github.io/wootils/class/wootils/node/appConfiguration.js~AppConfiguration.html\n ",
      "start": 0,
      "end": 136,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 4,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {APIClientBase}\n * https://homer0.github.io/wootils/class/wootils/shared/apiClient.js~APIClient.html\n ",
      "start": 138,
      "end": 259,
      "loc": {
        "start": {
          "line": 6,
          "column": 0
        },
        "end": {
          "line": 9,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {APIClientEndpoints}\n * https://homer0.github.io/wootils/typedef/index.html#static-typedef-APIClientEndpoints\n ",
      "start": 261,
      "end": 391,
      "loc": {
        "start": {
          "line": 11,
          "column": 0
        },
        "end": {
          "line": 14,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {PathUtils}\n * https://homer0.github.io/wootils/class/wootils/node/pathUtils.js~PathUtils.html\n ",
      "start": 393,
      "end": 508,
      "loc": {
        "start": {
          "line": 16,
          "column": 0
        },
        "end": {
          "line": 19,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {Logger}\n * https://homer0.github.io/wootils/class/wootils/node/logger.js~Logger.html\n ",
      "start": 510,
      "end": 616,
      "loc": {
        "start": {
          "line": 21,
          "column": 0
        },
        "end": {
          "line": 24,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {EnvironmentUtils}\n * https://homer0.github.io/wootils/class/wootils/node/environmentUtils.js~EnvironmentUtils.html\n ",
      "start": 618,
      "end": 754,
      "loc": {
        "start": {
          "line": 26,
          "column": 0
        },
        "end": {
          "line": 29,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {ErrorHandler}\n * https://homer0.github.io/wootils/class/wootils/node/errorHandler.js~ErrorHandler.html\n ",
      "start": 756,
      "end": 880,
      "loc": {
        "start": {
          "line": 31,
          "column": 0
        },
        "end": {
          "line": 34,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {RootRequire}\n * https://homer0.github.io/wootils/function/index.html#static-function-rootRequire\n ",
      "start": 882,
      "end": 1000,
      "loc": {
        "start": {
          "line": 36,
          "column": 0
        },
        "end": {
          "line": 39,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {Express} https://expressjs.com/en/4x/api.html\n ",
      "start": 1002,
      "end": 1069,
      "loc": {
        "start": {
          "line": 41,
          "column": 0
        },
        "end": {
          "line": 43,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {ExpressMiddleware} http://expressjs.com/en/guide/using-middleware.html\n ",
      "start": 1071,
      "end": 1163,
      "loc": {
        "start": {
          "line": 45,
          "column": 0
        },
        "end": {
          "line": 47,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {ExpressRequest} https://expressjs.com/en/4x/api.html#req\n ",
      "start": 1165,
      "end": 1243,
      "loc": {
        "start": {
          "line": 49,
          "column": 0
        },
        "end": {
          "line": 51,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {ExpressResponse} https://expressjs.com/en/4x/api.html#res\n ",
      "start": 1245,
      "end": 1324,
      "loc": {
        "start": {
          "line": 53,
          "column": 0
        },
        "end": {
          "line": 55,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {ExpressResponse} https://expressjs.com/en/4x/api.html#res\n ",
      "start": 1326,
      "end": 1405,
      "loc": {
        "start": {
          "line": 57,
          "column": 0
        },
        "end": {
          "line": 59,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {function(err:?Error)} ExpressNext A function to call the next middleware. If an\n *                                            argument is specified, it will be handled as an error\n *                                            and sent to the `errorHandler` service.\n ",
      "start": 1407,
      "end": 1693,
      "loc": {
        "start": {
          "line": 61,
          "column": 0
        },
        "end": {
          "line": 65,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} Provider An object that when registered on Jimpex will take care of setting up\n *                            services and/or configuring the app.\n *                            The method Jimpex uses to register a provider is `register(provider)`\n *                            and is inherit from Jimple.\n * @property {function(app:Jimpex)} register The method that gets called by Jimpex when registering\n *                                           the provider.\n ",
      "start": 1695,
      "end": 2186,
      "loc": {
        "start": {
          "line": 67,
          "column": 0
        },
        "end": {
          "line": 74,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} Controller An object that when mounted on Jimpex will return a list of routes\n *                              to handle an specific point.\n *                              The method Jimpex uses to mount a controller is\n *                              `mount(point, controller)`.\n * @property {function(app:Jimpex,point:String):Array} connect The method that gets called by\n *                                                             Jimpex when the controller is\n *                                                             mounted. It should return a list\n *                                                             of routes.\n ",
      "start": 2188,
      "end": 2852,
      "loc": {
        "start": {
          "line": 76,
          "column": 0
        },
        "end": {
          "line": 85,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} Middleware An object that when mounted on Jimpex will return an Express\n *                              middleware for the app to use.\n *                              The method Jimpex uses to mount a controller is `use(middleware)`.\n * @property {function(app:Jimpex):?ExpressMiddleware} connect The method that gets called by Jimpex\n *                                                             when the middleware is mounted. It\n *                                                             should return an Express middleware.\n ",
      "start": 2854,
      "end": 3415,
      "loc": {
        "start": {
          "line": 87,
          "column": 0
        },
        "end": {
          "line": 94,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "eof",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3416,
      "end": 3416,
      "loc": {
        "start": {
          "line": 95,
          "column": 0
        },
        "end": {
          "line": 95,
          "column": 0
        }
      }
    }
  ]
}